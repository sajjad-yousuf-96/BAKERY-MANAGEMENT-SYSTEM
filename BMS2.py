# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BMS.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from datetime import datetime
from reportlab.pdfgen import canvas
import webbrowser
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtWidgets import * 
import sqlite3
global B
global r
r=0
B=0
global d
d=94
from datetime import datetime


class Ui_BMS(object):
    def setupUi(self, BMS):
        BMS.setObjectName("BMS")
        BMS.resize(815, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("logopng-01.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        BMS.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(BMS)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 821, 601))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.frame = QtWidgets.QFrame(self.page)
        self.frame.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.widget = QtWidgets.QWidget(self.page)
        self.widget.setGeometry(QtCore.QRect(200, 160, 461, 361))
        self.widget.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(190, 10, 81, 41))
        self.label.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setGeometry(QtCore.QRect(190, 120, 201, 41))
        self.lineEdit.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_2.setGeometry(QtCore.QRect(190, 220, 201, 41))
        self.lineEdit_2.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.frame_2 = QtWidgets.QFrame(self.widget)
        self.frame_2.setGeometry(QtCore.QRect(70, 100, 81, 71))
        self.frame_2.setStyleSheet("image: url(:/newPrefix/3.png);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.frame_3 = QtWidgets.QFrame(self.widget)
        self.frame_3.setGeometry(QtCore.QRect(70, 200, 81, 71))
        self.frame_3.setStyleSheet("image: url(:/newPrefix/password.png);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(170, 310, 131, 41))
        self.pushButton.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(255,255,255);\n"
"background-color: rgb(253, 171, 27);")
        self.pushButton.setObjectName("pushButton")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.frame_4 = QtWidgets.QFrame(self.page_2)
        self.frame_4.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_4.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.widget_2 = QtWidgets.QWidget(self.page_2)
        self.widget_2.setGeometry(QtCore.QRect(200, 160, 461, 361))
        self.widget_2.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget_2.setObjectName("widget_2")
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setGeometry(QtCore.QRect(190, 10, 101, 41))
        self.label_2.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_2.setObjectName("label_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(190, 120, 201, 41))
        self.lineEdit_3.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_4.setGeometry(QtCore.QRect(190, 220, 201, 41))
        self.lineEdit_4.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_4.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.frame_5 = QtWidgets.QFrame(self.widget_2)
        self.frame_5.setGeometry(QtCore.QRect(70, 100, 81, 71))
        self.frame_5.setStyleSheet("image: url(:/newPrefix/3.png);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.frame_6 = QtWidgets.QFrame(self.widget_2)
        self.frame_6.setGeometry(QtCore.QRect(70, 200, 81, 71))
        self.frame_6.setStyleSheet("image: url(:/newPrefix/password.png);")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget_2)
        self.pushButton_2.setGeometry(QtCore.QRect(80, 300, 131, 41))
        self.pushButton_2.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(255,255,255);\n"
"background-color: rgb(253, 171, 27);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_25 = QtWidgets.QPushButton(self.widget_2)
        self.pushButton_25.setGeometry(QtCore.QRect(270, 300, 131, 41))
        self.pushButton_25.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(255,255,255);\n"
"background-color: rgb(253, 171, 27);")
        self.pushButton_25.setObjectName("pushButton_25")
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.frame_7 = QtWidgets.QFrame(self.page_3)
        self.frame_7.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_7.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.widget_3 = QtWidgets.QWidget(self.page_3)
        self.widget_3.setGeometry(QtCore.QRect(200, 160, 461, 361))
        self.widget_3.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget_3.setObjectName("widget_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_3.setGeometry(QtCore.QRect(50, 50, 151, 51))
        self.pushButton_3.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_4.setGeometry(QtCore.QRect(50, 150, 151, 51))
        self.pushButton_4.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_5.setGeometry(QtCore.QRect(50, 250, 151, 51))
        self.pushButton_5.setStyleSheet("font: 75 11pt \"Times New Roman\";")
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_6.setGeometry(QtCore.QRect(270, 150, 151, 51))
        self.pushButton_6.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_7.setGeometry(QtCore.QRect(270, 250, 151, 51))
        self.pushButton_7.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_8.setGeometry(QtCore.QRect(270, 50, 151, 51))
        self.pushButton_8.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_32 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_32.setGeometry(QtCore.QRect(160, 310, 151, 41))
        self.pushButton_32.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_32.setObjectName("pushButton_32")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_5.setEnabled(False)
        self.lineEdit_5.setGeometry(QtCore.QRect(642, 20, 131, 21))
        self.lineEdit_5.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.page_4)
        self.lineEdit_6.setEnabled(False)
        self.lineEdit_6.setGeometry(QtCore.QRect(642, 20, 131, 21))
        self.lineEdit_6.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.widget_4 = QtWidgets.QWidget(self.page_4)
        self.widget_4.setGeometry(QtCore.QRect(200, 160, 461, 361))
        self.widget_4.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget_4.setObjectName("widget_4")
        self.pushButton_9 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_9.setGeometry(QtCore.QRect(50, 50, 151, 51))
        self.pushButton_9.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_10 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_10.setGeometry(QtCore.QRect(50, 150, 151, 51))
        self.pushButton_10.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_11 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_11.setGeometry(QtCore.QRect(50, 250, 151, 51))
        self.pushButton_11.setStyleSheet("font: 75 11pt \"Times New Roman\";")
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_12.setGeometry(QtCore.QRect(270, 150, 151, 51))
        self.pushButton_12.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_14 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_14.setGeometry(QtCore.QRect(270, 50, 151, 51))
        self.pushButton_14.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_31 = QtWidgets.QPushButton(self.widget_4)
        self.pushButton_31.setGeometry(QtCore.QRect(270, 250, 151, 51))
        self.pushButton_31.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.pushButton_31.setObjectName("pushButton_31")
        self.frame_8 = QtWidgets.QFrame(self.page_4)
        self.frame_8.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_8.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.frame_9 = QtWidgets.QFrame(self.page_5)
        self.frame_9.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_9.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_9.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.widget_5 = QtWidgets.QWidget(self.page_5)
        self.widget_5.setGeometry(QtCore.QRect(200, 160, 461, 361))
        self.widget_5.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget_5.setObjectName("widget_5")
        self.label_3 = QtWidgets.QLabel(self.widget_5)
        self.label_3.setGeometry(QtCore.QRect(150, 10, 151, 41))
        self.label_3.setStyleSheet("font: 75 16pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.widget_5)
        self.label_4.setGeometry(QtCore.QRect(80, 100, 41, 41))
        self.label_4.setStyleSheet("font: 75 16pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.widget_5)
        self.label_5.setGeometry(QtCore.QRect(80, 190, 61, 41))
        self.label_5.setStyleSheet("font: 75 16pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_5.setObjectName("label_5")
        self.dateEdit = QtWidgets.QDateEdit(self.widget_5)
        self.dateEdit.setDateTime(QtCore.QDateTime.currentDateTime())
        self.dateEdit.setGeometry(QtCore.QRect(230, 100, 181, 41))
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")
        self.dateEdit_2 = QtWidgets.QDateEdit(self.widget_5)
        self.dateEdit_2.setDateTime(QtCore.QDateTime.currentDateTime())
        self.dateEdit_2.setGeometry(QtCore.QRect(230, 190, 181, 41))
        self.dateEdit_2.setCalendarPopup(True)
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.pushButton_13 = QtWidgets.QPushButton(self.widget_5)
        self.pushButton_13.setGeometry(QtCore.QRect(30, 270, 151, 61))
        self.pushButton_13.setStyleSheet("font: 75 8pt \"Times New Roman\";\n"
"color:rgb(255,255,255);\n"
"background-color: rgb(208, 140, 22);")
        self.pushButton_13.setObjectName("pushButton_13")
        self.pushButton_103 = QtWidgets.QPushButton(self.widget_5)
        self.pushButton_103.setGeometry(QtCore.QRect(280, 270, 151, 61))
        self.pushButton_103.setStyleSheet("font: 75 8pt \"Times New Roman\";\n"
"color:rgb(255,255,255);\n"
"background-color: rgb(208, 140, 22);")
        self.pushButton_103.setObjectName("pushButton_103")
        self.toolButton_5 = QtWidgets.QToolButton(self.page_5)
        self.toolButton_5.setGeometry(QtCore.QRect(280, 70, 81, 51))
        self.toolButton_5.setArrowType(QtCore.Qt.LeftArrow)
        self.toolButton_5.setObjectName("toolButton_5")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.page_5)
        self.lineEdit_7.setEnabled(False)
        self.lineEdit_7.setGeometry(QtCore.QRect(650, 20, 131, 21))
        self.lineEdit_7.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_7.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.frame_12 = QtWidgets.QFrame(self.page_6)
        self.frame_12.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_12.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.widget_6 = QtWidgets.QWidget(self.page_6)
        self.widget_6.setGeometry(QtCore.QRect(200, 160, 461, 361))
        self.widget_6.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget_6.setObjectName("widget_6")
        self.label_10 = QtWidgets.QLabel(self.widget_6)
        self.label_10.setGeometry(QtCore.QRect(160, 10, 141, 41))
        self.label_10.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_10.setObjectName("label_10")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.widget_6)
        self.lineEdit_9.setGeometry(QtCore.QRect(240, 100, 201, 41))
        self.lineEdit_9.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_9.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.widget_6)
        self.lineEdit_10.setGeometry(QtCore.QRect(240, 200, 201, 41))
        self.lineEdit_10.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_10.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_10.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.pushButton_17 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_17.setGeometry(QtCore.QRect(30, 290, 61, 41))
        self.pushButton_17.setStyleSheet("image: url(:/newPrefix/add.png);")
        self.pushButton_17.setText("")
        self.pushButton_17.setObjectName("pushButton_17")
        self.label_11 = QtWidgets.QLabel(self.widget_6)
        self.label_11.setGeometry(QtCore.QRect(10, 100, 191, 41))
        self.label_11.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.widget_6)
        self.label_12.setGeometry(QtCore.QRect(10, 200, 211, 41))
        self.label_12.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_12.setObjectName("label_12")
        self.pushButton_18 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_18.setGeometry(QtCore.QRect(140, 290, 61, 41))
        self.pushButton_18.setStyleSheet("image: url(:/newPrefix/update.png);")
        self.pushButton_18.setText("")
        self.pushButton_18.setObjectName("pushButton_18")
        self.pushButton_19 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_19.setGeometry(QtCore.QRect(250, 290, 61, 41))
        self.pushButton_19.setStyleSheet("image:url(:/newPrefix/delete.png)")
        self.pushButton_19.setText("")
        self.pushButton_19.setObjectName("pushButton_19")
        self.pushButton_20 = QtWidgets.QPushButton(self.widget_6)
        self.pushButton_20.setGeometry(QtCore.QRect(360, 290, 61, 41))
        self.pushButton_20.setStyleSheet("image: url(:/newPrefix/clears.png);")
        self.pushButton_20.setText("")
        self.pushButton_20.setObjectName("pushButton_20")
        self.toolButton_4 = QtWidgets.QToolButton(self.page_6)
        self.toolButton_4.setGeometry(QtCore.QRect(280, 70, 81, 51))
        self.toolButton_4.setArrowType(QtCore.Qt.LeftArrow)
        self.toolButton_4.setObjectName("toolButton_4")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.page_6)
        self.lineEdit_8.setEnabled(False)
        self.lineEdit_8.setGeometry(QtCore.QRect(650, 20, 131, 21))
        self.lineEdit_8.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_8.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.stackedWidget.addWidget(self.page_6)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.frame_13 = QtWidgets.QFrame(self.page_7)
        self.frame_13.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_13.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.widget_7 = QtWidgets.QWidget(self.page_7)
        self.widget_7.setGeometry(QtCore.QRect(200, 140, 461, 451))
        self.widget_7.setStyleSheet("background-color: rgb(206, 206, 206);")
        self.widget_7.setObjectName("widget_7")
        self.label_13 = QtWidgets.QLabel(self.widget_7)
        self.label_13.setGeometry(QtCore.QRect(160, 10, 141, 41))
        self.label_13.setStyleSheet("font: 20pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_13.setObjectName("label_13")
        self.pushButton_21 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_21.setGeometry(QtCore.QRect(30, 390, 61, 41))
        self.pushButton_21.setStyleSheet("image: url(:/newPrefix/add.png);")
        self.pushButton_21.setText("")
        self.pushButton_21.setObjectName("pushButton_21")
        self.label_14 = QtWidgets.QLabel(self.widget_7)
        self.label_14.setGeometry(QtCore.QRect(10, 50, 201, 41))
        self.label_14.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_14.setObjectName("label_14")
        self.pushButton_22 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_22.setGeometry(QtCore.QRect(140, 390, 61, 41))
        self.pushButton_22.setStyleSheet("image: url(:/newPrefix/update.png);")
        self.pushButton_22.setText("")
        self.pushButton_22.setObjectName("pushButton_22")
        self.pushButton_23 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_23.setGeometry(QtCore.QRect(250, 390, 61, 41))
        self.pushButton_23.setStyleSheet("image:url(:/newPrefix/delete.png)")
        self.pushButton_23.setText("")
        self.pushButton_23.setObjectName("pushButton_23")
        self.pushButton_24 = QtWidgets.QPushButton(self.widget_7)
        self.pushButton_24.setGeometry(QtCore.QRect(360, 390, 61, 41))
        self.pushButton_24.setStyleSheet("image: url(:/newPrefix/clears.png);")
        self.pushButton_24.setText("")
        self.pushButton_24.setObjectName("pushButton_24")
        self.label_15 = QtWidgets.QLabel(self.widget_7)
        self.label_15.setGeometry(QtCore.QRect(10, 95, 201, 41))
        self.label_15.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_15.setObjectName("label_15")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.widget_7)
        self.lineEdit_12.setGeometry(QtCore.QRect(240, 100, 201, 31))
        self.lineEdit_12.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_12.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.label_16 = QtWidgets.QLabel(self.widget_7)
        self.label_16.setGeometry(QtCore.QRect(10, 140, 201, 41))
        self.label_16.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_16.setObjectName("label_16")
        self.lineEdit_13 = QtWidgets.QLineEdit(self.widget_7)
        self.lineEdit_13.setGeometry(QtCore.QRect(240, 145, 201, 31))
        self.lineEdit_13.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_13.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.label_17 = QtWidgets.QLabel(self.widget_7)
        self.label_17.setGeometry(QtCore.QRect(10, 185, 201, 41))
        self.label_17.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_17.setObjectName("label_17")
        self.lineEdit_14 = QtWidgets.QLineEdit(self.widget_7)
        self.lineEdit_14.setGeometry(QtCore.QRect(240, 190, 201, 31))
        self.lineEdit_14.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_14.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.label_18 = QtWidgets.QLabel(self.widget_7)
        self.label_18.setGeometry(QtCore.QRect(10, 230, 201, 41))
        self.label_18.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_18.setObjectName("label_18")
        self.lineEdit_15 = QtWidgets.QLineEdit(self.widget_7)
        self.lineEdit_15.setGeometry(QtCore.QRect(240, 235, 201, 31))
        self.lineEdit_15.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_15.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.label_19 = QtWidgets.QLabel(self.widget_7)
        self.label_19.setGeometry(QtCore.QRect(10, 275, 201, 41))
        self.label_19.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_19.setObjectName("label_19")
        self.lineEdit_16 = QtWidgets.QLineEdit(self.widget_7)
        self.lineEdit_16.setGeometry(QtCore.QRect(240, 280, 201, 31))
        self.lineEdit_16.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_16.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.label_20 = QtWidgets.QLabel(self.widget_7)
        self.label_20.setGeometry(QtCore.QRect(10, 320, 201, 41))
        self.label_20.setStyleSheet("font: 18pt \"Times New Roman\";\n"
"color: rgb(228, 156, 26);\n"
"color: rgb(197, 133, 22);")
        self.label_20.setObjectName("label_20")
        self.lineEdit_17 = QtWidgets.QLineEdit(self.widget_7)
        self.lineEdit_17.setGeometry(QtCore.QRect(240, 325, 201, 31))
        self.lineEdit_17.setStyleSheet("font: 75 16pt \"Times New Roman\";")
        self.lineEdit_17.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.comboBox = QtWidgets.QComboBox(self.widget_7)
        self.comboBox.setGeometry(QtCore.QRect(240, 55, 201, 31))
        self.comboBox.setObjectName("comboBox")
        self.toolButton_3 = QtWidgets.QToolButton(self.page_7)
        self.toolButton_3.setGeometry(QtCore.QRect(280, 70, 81, 51))
        self.toolButton_3.setArrowType(QtCore.Qt.LeftArrow)
        self.toolButton_3.setObjectName("toolButton_3")
        self.lineEdit_20 = QtWidgets.QLineEdit(self.page_7)
        self.lineEdit_20.setEnabled(False)
        self.lineEdit_20.setGeometry(QtCore.QRect(650, 20, 131, 21))
        self.lineEdit_20.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_20.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.frame_14 = QtWidgets.QFrame(self.page_8)
        self.frame_14.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_14.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.widget_8 = QtWidgets.QWidget(self.page_8)
        self.widget_8.setGeometry(QtCore.QRect(0, 250, 811, 351))
        self.widget_8.setStyleSheet("background-color: rgb(190, 190, 190);\n"
"color: rgb(0, 0, 0);")
        self.widget_8.setObjectName("widget_8")
        self.lineEdit_18 = QtWidgets.QLineEdit(self.widget_8)
        self.lineEdit_18.setGeometry(QtCore.QRect(10, 40, 171, 31))
        self.lineEdit_18.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.lineEdit_31 = QtWidgets.QLineEdit(self.widget_8)
        self.lineEdit_31.setGeometry(QtCore.QRect(220, 40, 171, 31))
        self.lineEdit_31.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_31.setObjectName("lineEdit_31")
        self.lineEdit_32 = QtWidgets.QLineEdit(self.widget_8)
        self.lineEdit_32.setGeometry(QtCore.QRect(430, 40, 171, 31))
        self.lineEdit_32.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_32.setObjectName("lineEdit_32")
        self.lineEdit_33 = QtWidgets.QLineEdit(self.widget_8)
        self.lineEdit_33.setGeometry(QtCore.QRect(630, 40, 171, 31))
        self.lineEdit_33.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_33.setObjectName("lineEdit_33")
        self.lineEdit_34 = QtWidgets.QLineEdit(self.widget_8)
        self.lineEdit_34.setGeometry(QtCore.QRect(630, 90, 171, 31))
        self.lineEdit_34.setObjectName("lineEdit_34")
        self.label_38 = QtWidgets.QLabel(self.widget_8)
        self.label_38.setGeometry(QtCore.QRect(540, 90, 61, 31))
        self.label_38.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_38.setObjectName("label_38")
        self.label_39 = QtWidgets.QLabel(self.widget_8)
        self.label_39.setGeometry(QtCore.QRect(70, 11, 61, 20))
        self.label_39.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.label_39.setObjectName("label_39")
        self.label_40 = QtWidgets.QLabel(self.widget_8)
        self.label_40.setGeometry(QtCore.QRect(250, 10, 101, 20))
        self.label_40.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.label_40.setObjectName("label_40")
        self.label_41 = QtWidgets.QLabel(self.widget_8)
        self.label_41.setGeometry(QtCore.QRect(470, 10, 101, 20))
        self.label_41.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_41.setAlignment(QtCore.Qt.AlignCenter)
        self.label_41.setObjectName("label_41")
        self.label_42 = QtWidgets.QLabel(self.widget_8)
        self.label_42.setGeometry(QtCore.QRect(660, 10, 101, 20))
        self.label_42.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_42.setAlignment(QtCore.Qt.AlignCenter)
        self.label_42.setObjectName("label_42")
        self.tableWidget = QtWidgets.QTableWidget(self.widget_8)
        self.tableWidget.setGeometry(QtCore.QRect(0, 130, 811, 231))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(157)
        self.pushButton_26 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_26.setGeometry(QtCore.QRect(240, 80, 61, 41))
        self.pushButton_26.setStyleSheet("image: url(:/newPrefix/add.png);")
        self.pushButton_26.setText("")
        self.pushButton_26.setObjectName("pushButton_26")
        self.pushButton_28 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_28.setGeometry(QtCore.QRect(350, 80, 61, 41))
        self.pushButton_28.setStyleSheet("image: url(:/newPrefix/update.png);")
        self.pushButton_28.setText("")
        self.pushButton_28.setObjectName("pushButton_28")
        self.pushButton_29 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_29.setGeometry(QtCore.QRect(460, 80, 61, 41))
        self.pushButton_29.setStyleSheet("image:url(:/newPrefix/print.png)")
        self.pushButton_29.setText("")
        self.pushButton_29.setObjectName("pushButton_29")
        self.pushButton_57 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_57.setGeometry(QtCore.QRect(10, 80, 61, 41))
        self.pushButton_57.setStyleSheet("image: url(:/newPrefix/clears.png);")
        self.pushButton_57.setText("")
        self.pushButton_57.setObjectName("pushButton_57")
        self.widget_15 = QtWidgets.QWidget(self.page_8)
        self.widget_15.setGeometry(QtCore.QRect(400, 30, 401, 131))
        self.widget_15.setStyleSheet("background-color: rgb(253, 171, 27);")
        self.widget_15.setObjectName("widget_15")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.widget_15)
        self.lineEdit_11.setGeometry(QtCore.QRect(220, 40, 151, 31))
        self.lineEdit_11.setStyleSheet("color: rgb(255, 255, 255);")
        self.lineEdit_11.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.dateEdit_7 = QtWidgets.QDateEdit(self.widget_15)
        self.dateEdit_7.setDateTime(QtCore.QDateTime.currentDateTime())
        self.dateEdit_7.setGeometry(QtCore.QRect(220, 90, 151, 31))
        self.dateEdit_7.setStyleSheet("color: rgb(255, 255, 255);")
        self.dateEdit_7.setCalendarPopup(True)
        self.dateEdit_7.setObjectName("dateEdit_7")
        self.pushButton_51= QtWidgets.QPushButton(self.widget_15)
        self.pushButton_51.setGeometry(QtCore.QRect(360, 0, 41, 31))
        self.pushButton_51.setStyleSheet("image:url(:/newPrefix/add.png)")
        self.pushButton_51.setObjectName("pushButton_51")
        self.stackedWidget.addWidget(self.page_8)
        self.label_21 = QtWidgets.QLabel(self.widget_15)
        self.label_21.setGeometry(QtCore.QRect(20, 40, 131, 31))
        self.label_21.setStyleSheet("font: 75 16pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.label_21.setObjectName("label_21")
        self.label_37 = QtWidgets.QLabel(self.widget_15)
        self.label_37.setGeometry(QtCore.QRect(20, 90, 131, 31))
        self.label_37.setStyleSheet("font: 75 16pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.label_37.setObjectName("label_37")
        self.label_43 = QtWidgets.QLabel(self.widget_15)
        self.label_43.setGeometry(QtCore.QRect(100, 0, 201, 31))
        self.label_43.setStyleSheet("font: 75 22pt \"Times New Roman\";\n"
"color: rgb(255,255,255);")
        self.label_43.setObjectName("label_43")
        self.toolButton_2 = QtWidgets.QToolButton(self.page_8)
        self.toolButton_2.setGeometry(QtCore.QRect(280, 70, 81, 51))
        self.toolButton_2.setArrowType(QtCore.Qt.LeftArrow)
        self.toolButton_2.setObjectName("toolButton_2")
        self.lineEdit_21 = QtWidgets.QLineEdit(self.page_8)
        self.lineEdit_21.setEnabled(False)
        self.lineEdit_21.setGeometry(QtCore.QRect(650, 10, 131, 21))
        self.lineEdit_21.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_21.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.stackedWidget.addWidget(self.page_8)
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.frame_15 = QtWidgets.QFrame(self.page_9)
        self.frame_15.setGeometry(QtCore.QRect(0, 0, 251, 251))
        self.frame_15.setStyleSheet("image: url(:/newPrefix/logopng-01.png);")
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.widget_9 = QtWidgets.QWidget(self.page_9)
        self.widget_9.setGeometry(QtCore.QRect(0, 250, 811, 351))
        self.widget_9.setStyleSheet("background-color: rgb(190, 190, 190);\n"
"color: rgb(0, 0, 0);")
        self.widget_9.setObjectName("widget_9")
        self.lineEdit_19 = QtWidgets.QLineEdit(self.widget_9)
        self.lineEdit_19.setGeometry(QtCore.QRect(10, 40, 171, 31))
        self.lineEdit_19.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.lineEdit_35 = QtWidgets.QLineEdit(self.widget_9)
        self.lineEdit_35.setGeometry(QtCore.QRect(220, 40, 171, 31))
        self.lineEdit_35.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_35.setObjectName("lineEdit_35")
        self.lineEdit_36 = QtWidgets.QLineEdit(self.widget_9)
        self.lineEdit_36.setGeometry(QtCore.QRect(430, 40, 171, 31))
        self.lineEdit_36.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_36.setObjectName("lineEdit_36")
        self.lineEdit_37 = QtWidgets.QLineEdit(self.widget_9)
        self.lineEdit_37.setGeometry(QtCore.QRect(630, 40, 171, 31))
        self.lineEdit_37.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_37.setObjectName("lineEdit_37")
        self.lineEdit_38 = QtWidgets.QLineEdit(self.widget_9)
        self.lineEdit_38.setGeometry(QtCore.QRect(630, 90, 171, 31))
        self.lineEdit_38.setObjectName("lineEdit_38")
        self.label_44 = QtWidgets.QLabel(self.widget_9)
        self.label_44.setGeometry(QtCore.QRect(540, 90, 61, 31))
        self.label_44.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_44.setObjectName("label_44")
        self.label_45 = QtWidgets.QLabel(self.widget_9)
        self.label_45.setGeometry(QtCore.QRect(70, 11, 61, 20))
        self.label_45.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_45.setAlignment(QtCore.Qt.AlignCenter)
        self.label_45.setObjectName("label_45")
        self.label_46 = QtWidgets.QLabel(self.widget_9)
        self.label_46.setGeometry(QtCore.QRect(250, 10, 101, 20))
        self.label_46.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_46.setAlignment(QtCore.Qt.AlignCenter)
        self.label_46.setObjectName("label_46")
        self.label_47 = QtWidgets.QLabel(self.widget_9)
        self.label_47.setGeometry(QtCore.QRect(470, 10, 101, 20))
        self.label_47.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_47.setAlignment(QtCore.Qt.AlignCenter)
        self.label_47.setObjectName("label_47")
        self.label_48 = QtWidgets.QLabel(self.widget_9)
        self.label_48.setGeometry(QtCore.QRect(660, 10, 101, 20))
        self.label_48.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.label_48.setAlignment(QtCore.Qt.AlignCenter)
        self.label_48.setObjectName("label_48")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.widget_9)
        self.tableWidget_2.setGeometry(QtCore.QRect(0, 130, 811, 231))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(5)
        self.tableWidget_2.setRowCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(4, item)
        self.tableWidget_2.horizontalHeader().setDefaultSectionSize(157)
        self.pushButton_27 = QtWidgets.QPushButton(self.widget_9)
        self.pushButton_27.setGeometry(QtCore.QRect(240, 80, 61, 41))
        self.pushButton_27.setStyleSheet("image: url(:/newPrefix/add.png);")
        self.pushButton_27.setText("")
        self.pushButton_27.setObjectName("pushButton_27")
        self.pushButton_30 = QtWidgets.QPushButton(self.widget_9)
        self.pushButton_30.setGeometry(QtCore.QRect(350, 80, 61, 41))
        self.pushButton_30.setStyleSheet("image: url(:/newPrefix/update.png);")
        self.pushButton_30.setText("")
        self.pushButton_30.setObjectName("pushButton_30")
        self.pushButton_59 = QtWidgets.QPushButton(self.widget_9)
        self.pushButton_59.setGeometry(QtCore.QRect(460, 80, 61, 41))
        self.pushButton_59.setStyleSheet("image:url(:/newPrefix/clears.png)")
        self.pushButton_59.setText("")
        self.pushButton_59.setObjectName("pushButton_59")
        self.widget_16 = QtWidgets.QWidget(self.page_9)
        self.widget_16.setGeometry(QtCore.QRect(400, 30, 401, 131))
        self.widget_16.setStyleSheet("background-color: rgb(253, 171, 27);")
        self.widget_16.setObjectName("widget_16")
        self.dateEdit_8 = QtWidgets.QDateEdit(self.widget_16)
        self.dateEdit_8.setGeometry(QtCore.QRect(230, 60, 151, 31))
        self.dateEdit_8.setDateTime(QtCore.QDateTime.currentDateTime())
        self.dateEdit_8.setStyleSheet("color: rgb(255, 255, 255);")
        self.dateEdit_8.setCalendarPopup(True)
        self.dateEdit_8.setObjectName("dateEdit_8")
        self.label_50 = QtWidgets.QLabel(self.widget_16)
        self.label_50.setGeometry(QtCore.QRect(30, 60, 131, 31))
        self.label_50.setStyleSheet("font: 75 16pt \"Times New Roman\";\n"
"color: rgb(255, 255, 255);")
        self.label_50.setObjectName("label_50")
        self.label_49 = QtWidgets.QLabel(self.widget_16)
        self.label_49.setGeometry(QtCore.QRect(90, 10, 210, 31))
        self.label_49.setStyleSheet("font: 75 18pt \"Times New Roman\";\n"
"color: rgb(255,255,255);")
        self.label_49.setObjectName("label_49")
        self.toolButton = QtWidgets.QToolButton(self.page_9)
        self.toolButton.setGeometry(QtCore.QRect(280, 70, 81, 51))
        self.toolButton.setArrowType(QtCore.Qt.LeftArrow)
        self.toolButton.setObjectName("toolButton")
        self.lineEdit_22 = QtWidgets.QLineEdit(self.page_9)
        self.lineEdit_22.setEnabled(False)
        self.lineEdit_22.setGeometry(QtCore.QRect(650, 10, 131, 21))
        self.lineEdit_22.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit_22.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_22.setObjectName("lineEdit_22")
        self.stackedWidget.addWidget(self.page_9)
        BMS.setCentralWidget(self.centralwidget)

        self.retranslateUi(BMS)
        self.stackedWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(BMS)

    def retranslateUi(self, BMS):
        _translate = QtCore.QCoreApplication.translate
        BMS.setWindowTitle(_translate("BMS", "BMS"))
        self.label.setText(_translate("BMS", "LOGIN"))
        self.lineEdit.setPlaceholderText(_translate("BMS", "USERNAME"))
        self.lineEdit_2.setPlaceholderText(_translate("BMS", "PASSWORD"))
        self.pushButton.setText(_translate("BMS", "LOGIN"))
        self.label_2.setText(_translate("BMS", "SIGNUP"))
        self.lineEdit_3.setPlaceholderText(_translate("BMS", "USERNAME"))
        self.lineEdit_4.setPlaceholderText(_translate("BMS", "PASSWORD"))
        self.pushButton_2.setText(_translate("BMS", "SIGNUP"))
        self.pushButton_25.setText(_translate("BMS", "DELETE"))
        self.pushButton_3.setText(_translate("BMS", "CATEGORY"))
        self.pushButton_4.setText(_translate("BMS", "PRODUCTS"))
        self.pushButton_5.setText(_translate("BMS", "PURCHASE-ORDER"))
        self.pushButton_6.setText(_translate("BMS", "SALES REPORT"))
        self.pushButton_7.setText(_translate("BMS", "CREATE USER"))
        self.pushButton_8.setText(_translate("BMS", "SALES-ORDER"))
        self.pushButton_32.setText(_translate("BMS", "LOGOUT"))
        self.lineEdit_5.setText(_translate("BMS", "ADMIN"))
        self.lineEdit_6.setText(_translate("BMS", "USER"))
        self.pushButton_9.setText(_translate("BMS", "CATEGORY"))
        self.pushButton_10.setText(_translate("BMS", "PRODUCTS"))
        self.pushButton_11.setText(_translate("BMS", "PURCHASE-ORDER"))
        self.pushButton_12.setText(_translate("BMS", "SALES REPORT"))
        self.pushButton_14.setText(_translate("BMS", "SALES-ORDER"))
        self.pushButton_31.setText(_translate("BMS", "LOGOUT"))
        self.label_3.setText(_translate("BMS", "SALES REPORT"))
        self.label_4.setText(_translate("BMS", "TO"))
        self.label_5.setText(_translate("BMS", "FROM"))
        self.pushButton_13.setText(_translate("BMS", "GENERATE PROFIT REPORT"))
        self.pushButton_103.setText(_translate("BMS", "GENERATE SALES REPORT"))
        self.toolButton_5.setText(_translate("BMS", "..."))
        self.lineEdit_7.setText(_translate("BMS", "USER"))
        self.label_10.setText(_translate("BMS", "CATEGORY"))
        self.lineEdit_9.setPlaceholderText(_translate("BMS", "ID"))
        self.lineEdit_10.setPlaceholderText(_translate("BMS", "NAME"))
        self.label_11.setText(_translate("BMS", "CATEGORY-ID"))
        self.label_12.setText(_translate("BMS", "CATEGORY-NAME"))
        self.toolButton_4.setText(_translate("BMS", "..."))
        self.lineEdit_8.setText(_translate("BMS", "USER"))
        self.label_13.setText(_translate("BMS", "PRODUCTS"))
        self.label_14.setText(_translate("BMS", "CATEGORY-NAME"))
        self.label_15.setText(_translate("BMS", "PR-ID"))
        self.lineEdit_12.setPlaceholderText(_translate("BMS", "ID"))
        self.label_16.setText(_translate("BMS", "PR-NAME"))
        self.lineEdit_13.setPlaceholderText(_translate("BMS", "NAME"))
        self.label_17.setText(_translate("BMS", "DESCRIPTION"))
        self.lineEdit_14.setPlaceholderText(_translate("BMS", "DESC"))
        self.label_18.setText(_translate("BMS", "PRICE"))
        self.lineEdit_15.setPlaceholderText(_translate("BMS", "PRICE"))
        self.label_19.setText(_translate("BMS", "WEIGHT"))
        self.lineEdit_16.setPlaceholderText(_translate("BMS", "KGS"))
        self.label_20.setText(_translate("BMS", "QTY"))
        self.lineEdit_17.setPlaceholderText(_translate("BMS", "QTY"))
        self.toolButton_3.setText(_translate("BMS", "..."))
        self.lineEdit_20.setText(_translate("BMS", "USER"))
        self.lineEdit_18.setPlaceholderText(_translate("BMS", "ID"))
        self.lineEdit_31.setPlaceholderText(_translate("BMS", "NAME"))
        self.lineEdit_32.setPlaceholderText(_translate("BMS", "PRICE"))
        self.lineEdit_33.setPlaceholderText(_translate("BMS", "QTY"))
        self.label_38.setText(_translate("BMS", "TOTAL"))
        self.label_39.setText(_translate("BMS", "PR-ID"))
        self.label_40.setText(_translate("BMS", "PR-NAME"))
        self.label_41.setText(_translate("BMS", "PRICE"))
        self.label_42.setText(_translate("BMS", "QTY"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("BMS", "1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("BMS", "2"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("BMS", "3"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("BMS", "PR-ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("BMS", "PR-NAME"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("BMS", "PRICE"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("BMS", "QTY"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("BMS", "TOTAL"))
        self.pushButton_26.setShortcut(_translate("BMS", "Enter"))
        self.pushButton_29.setShortcut(_translate("BMS", "Ctrl+P"))
        self.pushButton_59.setShortcut(_translate("BMS", "Ctrl+P"))
        self.lineEdit_11.setText(_translate("BMS", "1"))
        self.label_21.setText(_translate("BMS", "SALES NO"))
        self.label_37.setText(_translate("BMS", "DATE"))
        self.label_43.setText(_translate("BMS", "SALES-ORDER"))
        self.toolButton_2.setText(_translate("BMS", "..."))
        self.lineEdit_21.setText(_translate("BMS", "USER"))
        self.lineEdit_19.setPlaceholderText(_translate("BMS", "ID"))
        self.lineEdit_35.setPlaceholderText(_translate("BMS", "NAME"))
        self.lineEdit_36.setPlaceholderText(_translate("BMS", "PRICE"))
        self.lineEdit_37.setPlaceholderText(_translate("BMS", "QTY"))
        self.label_44.setText(_translate("BMS", "TOTAL"))
        self.label_45.setText(_translate("BMS", "PR-ID"))
        self.label_46.setText(_translate("BMS", "PR-NAME"))
        self.label_47.setText(_translate("BMS", "PRICE"))
        self.label_48.setText(_translate("BMS", "QTY"))
        item = self.tableWidget_2.verticalHeaderItem(0)
        item.setText(_translate("BMS", "1"))
        item = self.tableWidget_2.verticalHeaderItem(1)
        item.setText(_translate("BMS", "2"))
        item = self.tableWidget_2.verticalHeaderItem(2)
        item.setText(_translate("BMS", "3"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("BMS", "PR-ID"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("BMS", "PR-NAME"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("BMS", "PRICE"))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("BMS", "QTY"))
        item = self.tableWidget_2.horizontalHeaderItem(4)
        item.setText(_translate("BMS", "TOTAL"))
        self.pushButton_27.setShortcut(_translate("BMS", "Enter"))
        self.label_50.setText(_translate("BMS", "DATE"))
        self.label_49.setText(_translate("BMS", "PURCHASE-ORDER"))
        self.toolButton.setText(_translate("BMS", "..."))
        self.lineEdit_22.setText(_translate("BMS", "USER"))
        self.pushButton_57.setShortcut(_translate("BMS", "Esc"))
        self.pushButton.clicked.connect(self.login)
        self.pushButton_14.clicked.connect(self.ushiftpos)        
        self.pushButton_8.clicked.connect(self.ashiftpos)
        self.pushButton_4.clicked.connect(self.combox)
        self.pushButton_10.clicked.connect(self.combox)
        self.pushButton_4.clicked.connect(self.prgetpid)
        self.pushButton_10.clicked.connect(self.prgetpid)
        self.pushButton_4.clicked.connect(self.ashiftpro)
        self.pushButton_10.clicked.connect(self.ushiftpro)
        self.toolButton.clicked.connect(self.backpage)
        self.toolButton_2.clicked.connect(self.backpage)
        self.toolButton_3.clicked.connect(self.backpage)
        self.toolButton_4.clicked.connect(self.backpage)
        self.toolButton_5.clicked.connect(self.backpage)
        self.pushButton_3.clicked.connect(self.ashiftcat)
        self.pushButton_9.clicked.connect(self.ushiftcat)
        self.pushButton_6.clicked.connect(self.ashiftreports)
        self.pushButton_12.clicked.connect(self.ushiftreports)
        self.pushButton_7.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(1))
        self.pushButton_11.clicked.connect(self.ushiftpur)
        self.pushButton_5.clicked.connect(self.ashiftpur)
        self.pushButton_31.clicked.connect(self.logoutt)
        self.pushButton_32.clicked.connect(self.logoutt)
        self.pushButton_17.clicked.connect(self.addcat)
        self.pushButton_20.clicked.connect(self.clearcat)
        self.pushButton_19.clicked.connect(self.delcat)
        self.pushButton_21.clicked.connect(self.addpr)
        self.pushButton_23.clicked.connect(self.delpr)
        self.pushButton_24.clicked.connect(self.clearpr)
        self.pushButton_26.clicked.connect(self.taketable)
        self.pushButton_2.clicked.connect(self.signup)
        self.pushButton_25.clicked.connect(self.delup)
        self.pushButton_28.clicked.connect(self.addmore)
        self.pushButton_28.clicked.connect(self.loaddata)
        self.pushButton_29.clicked.connect(self.sales)
        self.pushButton_29.clicked.connect(self.cleartable)
        self.pushButton_8.clicked.connect(self.billload)
        self.pushButton_14.clicked.connect(self.billload)
        self.pushButton_8.clicked.connect(self.pdfpos)
        self.pushButton_8.clicked.connect(self.pgetpid)
        self.pushButton_14.clicked.connect(self.pdfpos)
        self.pushButton_29.clicked.connect(self.pdfpos)
        self.pushButton_14.clicked.connect(self.pgetpid)
        self.pushButton_29.clicked.connect(self.pgetpid)
        self.pushButton_13.clicked.connect(self.prreportgenerate)
        self.pushButton_103.clicked.connect(self.reportgenerate)
        self.pushButton_21.clicked.connect(self.prgetpid)
        self.pushButton_23.clicked.connect(self.prgetpid)
        self.pushButton_22.clicked.connect(self.updatepr)
        self.pushButton_11.clicked.connect(self.purpid)
        self.pushButton_5.clicked.connect(self.purpid)
        self.pushButton_30.clicked.connect(self.addmorepur)
        self.pushButton_30.clicked.connect(self.loadpurdata)
        self.pushButton_27.clicked.connect(self.takepurtable)
        self.pushButton_59.clicked.connect(self.savepur)
        self.pushButton_51.clicked.connect(self.saleperpr)
        self.pushButton_51.clicked.connect(self.gettotal)
        self.pushButton_57.clicked.connect(self.deletecome)
        self.pushButton_3.clicked.connect(self.cate)
        self.pushButton_9.clicked.connect(self.cate)
        ####             MAIN   CODE    START FROM HERE    #####
    def cate(self):
        try:
             se=[]
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("SELECT CAT_ID FROM CATEGORY")
             cursor.execute(sql)
             b=cursor.fetchall()
             data=[datum[0] for datum in b]
             conn.commit()
             conn.close()
             completer=QCompleter(data)
             self.lineEdit_9.setCompleter(completer)
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("SELECT CAT_NAME FROM CATEGORY")
             cursor.execute(sql)
             b=cursor.fetchall()
             data=[datum[0] for datum in b]
             conn.commit()
             conn.close()
             completer=QCompleter(data)
             self.lineEdit_10.setCompleter(completer)
        except Exception as error:
             print(error)
    def deletecome(self):
        try:
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("DELETE FROM DATAPUR")
             result=cursor.execute(sql)
             sql=("DELETE FROM DATA")
             result=cursor.execute(sql)
             conn.commit()
             conn.close()
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("SELECT * FROM DATAPUR")
             result=cursor.execute(sql)
             self.tableWidget.setRowCount(0)
             for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget.setItem(row_number,column_number, QtWidgets.QTableWidgetItem(str(data)))
             conn.commit()
             conn.close()
             self.lineEdit_34.setText("")
        except Exception as error:
             print(error) 
    def gettotal(self):
        salesno=self.lineEdit_11.text()
        try:
            w=[]
            conn = sqlite3.connect('BMS.db')
            cursor = conn.cursor()
            sql = ('''SELECT TOTAL FROM SALESPR WHERE SALESNO = ?''')
            cursor.execute(sql,(salesno,))
            b=cursor.fetchall()
            for i in range(len(b)):
                m=int(b[i][0])
                w.append(m)
            ws=sum(w)
            self.lineEdit_34.setText(str(ws))
            conn.commit()
            conn.close()
        except Exception as error:
            print(error)
    def saleperpr(self):
        salesno=self.lineEdit_11.text()
        try:
            conn = sqlite3.connect('BMS.db')
            cursor = conn.cursor()
            sql = ('''SELECT * FROM DATA ''')
            cursor.execute(sql,)
            b=cursor.fetchall()
            conn.commit()
            conn.close()
            bb=len(b)
            # print("LENGTH",bb)
            if len(b)!=0:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''DELETE FROM DATA ''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                conn.commit()
                conn.close()
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT * FROM SALESPR WHERE SALESNO = ? ''')
                cursor.execute(sql,(salesno,))
                b=cursor.fetchall()
                bb=len(b)
        #print(bb)
                conn.commit()
                conn.close()
                # print(b)
                for i in range(len(b)):
                    conn = sqlite3.connect('BMS.db')
                    cursor = conn.cursor()
                    pid=b[i][1]
                    pname=b[i][2]
                    price=b[i][3]
                    quantity=b[i][4]
                    total=b[i][5]
                    sql = ('''INSERT INTO DATA(PR_ID,PR_NAME,PRICE,QUANTITY,TOTAL) VALUES(?,?,?,?,?);''')
                    cursor.execute(sql,(pid,pname,price,quantity,total))
                    conn.commit()
                    conn.close()
            elif len(b)==0:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT * FROM SALESPR WHERE SALESNO = ? ''')
                cursor.execute(sql,(salesno,))
                b=cursor.fetchall()
                bb=len(b)
        #print(bb)
                conn.commit()
                conn.close()
                # print(b)
                for i in range(len(b)):
                    conn = sqlite3.connect('BMS.db')
                    cursor = conn.cursor()
                    pid=b[i][1]
                    pname=b[i][2]
                    price=b[i][3]
                    quantity=b[i][4]
                    total=b[i][5]
                    sql = ('''INSERT INTO DATA(PR_ID,PR_NAME,PRICE,QUANTITY,TOTAL) VALUES(?,?,?,?,?);''')
                    cursor.execute(sql,(pid,pname,price,quantity,total))
                    conn.commit()
                    conn.close()
            else:
                msg=QMessageBox()
                msg.setText("NO PR-ID")
                msg.setIcon(QMessageBox.Critical)
                msg.setWindowTitle("BMS")
                msg.exec_()
            conn = sqlite3.connect('BMS.db')
            cursor = conn.cursor()
            sql=("SELECT * FROM DATA")
            result=cursor.execute(sql)
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number,column_number, QtWidgets.QTableWidgetItem(str(data)))
            conn.commit()
            conn.close()
        except Exception as error:
            print(error) 
    def billload(self):
        a=[]
        conn = sqlite3.connect('BMS.db')
        cursor = conn.cursor()
        sql = ('''SELECT SALESNO FROM SALES ORDER BY SALESNO DESC ''')
        cursor.execute(sql,)
        b=cursor.fetchall()
        # print(b)
        for b in b:
                c=int(b[0])
                a.append(c)
        f=max(a)
        f=f+1
        self.lineEdit_11.setText(str(f))
    def cleartable(self):
        conn = sqlite3.connect('BMS.db')
        cursor = conn.cursor()
        sql = ('''DELETE FROM DATA''')
        cursor.execute(sql,)
        conn.commit()
        conn.close()
        conn = sqlite3.connect('BMS.db')
        cursor = conn.cursor()
        sql=('SELECT * FROM DATA')
        result=cursor.execute(sql)
        self.tableWidget.setRowCount(0)
        for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget.setItem(row_number,column_number, QtWidgets.QTableWidgetItem(str(data)))
        conn.commit()
        conn.close()
        self.lineEdit_34.setText("")
        global B
        B=0
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setText("CLEARED")
        msg.setWindowTitle("BMS")
        msg.exec_()
        a=self.lineEdit_11.text()
        a=int(a)+1
        self.lineEdit_11.setText(str(a))
    def clearcat(self):
        self.lineEdit_9.setText("")
        self.lineEdit_10.setText("")
    def clearpr(self):
        self.lineEdit_12.setText("")
        self.lineEdit_13.setText("")
        self.lineEdit_14.setText("")
        self.lineEdit_15.setText("")
        self.lineEdit_16.setText("")
        self.lineEdit_17.setText("")
    def delup(self):
        user=self.lineEdit_3.text()
        try:
             if user != '':
                conn=sqlite3.connect("BMS.db")
                cursor=conn.cursor()
                sql=('DELETE FROM LOGIN WHERE USER = ?')
                cursor.execute(sql,(user,))
                conn.commit()
                conn.close()
                msg=QMessageBox()
                msg.setText("USER DELETED")
                msg.setIcon(QMessageBox.Information)
                msg.setWindowTitle("BMS")
                msg.exec_()
                self.lineEdit_3.setText("")
                self.stackedWidget.setCurrentIndex(2)
             else:
                msg=QMessageBox()
                msg.setText("USER NOT FOUND")
                msg.setIcon(QMessageBox.Critical)
                msg.setWindowTitle("BMS")
                msg.exec_()           
        except Exception as error:
             print(error)     
    def logoutt(self):
        try:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("LOGGING OUT")
                msg.setWindowTitle("BMS")
                msg.exec_()
                self.stackedWidget.setCurrentIndex(0)
        except Exception as error:
                print(error)
    def signup(self):
        u2=self.lineEdit_3.text()
        pass2=self.lineEdit_4.text()
        try:
            if (u2 and pass2 == ""):
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("SOME FIELD IS MISSING")
                msg.setWindowTitle("BMS")
                msg.exec_()
            else:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''INSERT INTO LOGIN(USER,PASSWORD) VALUES(?,?);''')
                cursor.execute(sql,(u2,pass2))
                conn.commit()
                conn.close()
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("User Added Successfully")
                msg.setWindowTitle("BMS")
                msg.exec_()
                self.lineEdit_3.setText("")
                self.lineEdit_4.setText("")
                self.stackedWidget.setCurrentIndex(2)
        except Exception as error:
            print(error)
    def login(self):
        u1=self.lineEdit.text()
        pass1=self.lineEdit_2.text()
        try:
            conn = sqlite3.connect('BMS.db')
            cursor = conn.cursor()
            sql = 'SELECT * FROM LOGIN WHERE USER  = ? and PASSWORD = ?;'
            cursor.execute(sql,(u1,pass1))
            row=cursor.fetchone()
            if row==None:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("USERNAME OR PASSWORD IS INCORRECT")
                msg.setWindowTitle("BMS")
                msg.exec_()
                self.lineEdit_2.setText("")
                self.lineEdit.setText("")
            else:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("SUCCESSFULLY LOGGED IN")
                msg.setWindowTitle("BMS")
                msg.exec_()
                if self.lineEdit.text()=='admin':
                        self.lineEdit_2.setText("")
                        self.lineEdit.setText("")
                        self.stackedWidget.setCurrentIndex(2)
                else:
                        self.lineEdit.setText("")
                        self.lineEdit_2.setText("")
                        self.stackedWidget.setCurrentIndex(3)
                # a=self.dateEdit_7.text()
                # print(a)
        except Exception as error:
            print(error)
# ###########   CHANGING WHICH HAS USER HAS COME  #########
    
    def ashiftreports(self):
        self.lineEdit_7.setText("ADMIN")
        self.stackedWidget.setCurrentIndex(4)
    def ushiftreports(self):
        self.lineEdit_7.setText("USER")
        self.stackedWidget.setCurrentIndex(4)           
    def ashiftcat(self):
        self.lineEdit_8.setText("ADMIN")
        self.stackedWidget.setCurrentIndex(5)
    def ushiftcat(self):
        self.lineEdit_8.setText("USER")
        self.stackedWidget.setCurrentIndex(5)    
    def ashiftpro(self):
        self.lineEdit_20.setText("ADMIN")
        self.stackedWidget.setCurrentIndex(6)
    def ushiftpro(self):
        self.lineEdit_20.setText("USER")
        self.stackedWidget.setCurrentIndex(6)
    def ashiftpos(self):
        self.lineEdit_21.setText("ADMIN")
        self.stackedWidget.setCurrentIndex(7)
    def ushiftpos(self):
        self.lineEdit_21.setText("USER")
        self.stackedWidget.setCurrentIndex(7)
    def ashiftpur(self):
        self.lineEdit_22.setText("ADMIN")
        self.stackedWidget.setCurrentIndex(8)
    def ushiftpur(self):
        self.lineEdit_22.setText("USER")
        self.stackedWidget.setCurrentIndex(8)                                        
    def backpage(self):
        if self.lineEdit_7.text()=='ADMIN' or self.lineEdit_8.text()=='ADMIN' or self.lineEdit_20.text()=='ADMIN' or self.lineEdit_21.text()=='ADMIN' or self.lineEdit_22.text()=='ADMIN':
            self.stackedWidget.setCurrentIndex(2)
        else:
            self.stackedWidget.setCurrentIndex(3)
    def addcat(self):
        cid=self.lineEdit_9.text()
        cname=self.lineEdit_10.text()
        try:
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql = ('''INSERT INTO CATEGORY(CAT_ID,CAT_NAME) VALUES(?,?);''')
             cursor.execute(sql,(cid,cname))
             conn.commit()
             conn.close()
             self.lineEdit_9.setText("")
             self.lineEdit_10.setText("")
             msg = QMessageBox()
             msg.setIcon(QMessageBox.Information)
             msg.setText("SUCCESSFULLY ADDED")
             msg.setWindowTitle("BMS")
             msg.exec_()
        except Exception as error:
             print(error)        
    def delcat(self):
        cid=self.lineEdit_9.text()
        cname=self.lineEdit_10.text()
        try:
             if cname=='':
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''DELETE FROM CATEGORY WHERE CAT_ID = ?''')
                cursor.execute(sql,(cid,))
                conn.commit()
                conn.close()
                self.lineEdit_9.setText("")
                self.lineEdit_10.setText("")
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("SUCCESSFULLY DELETED")
                msg.setWindowTitle("BMS")
                msg.exec_()
             elif cid=='':
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''DELETE FROM CATEGORY WHERE CAT_NAME = ?''')
                cursor.execute(sql,(cname,))
                conn.commit()
                conn.close()
                self.lineEdit_9.setText("")
                self.lineEdit_10.setText("")
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("SUCCESSFULLY DELETED")
                msg.setWindowTitle("BMS")
                msg.exec_()
             else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("BOXES ARE EMPTY")
                msg.setWindowTitle("BMS")
                msg.exec_()
        except Exception as error:
             print(error)
    def combox(self):
        try:
             if self.comboBox.currentText()=="":
                a=[]
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT * FROM CATEGORY''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                bb=len(b)
        # print(bb)
                for i in range(bb):
                        a.append(b[i][1])
                self.comboBox.addItems(a)
                conn.commit()
                conn.close()
        except Exception as error:
             print(error)
    def addpr(self):
        com=str(self.comboBox.currentText())
        pr_id=self.lineEdit_12.text()
        pr_name=self.lineEdit_13.text()
        pr_desc=self.lineEdit_14.text()
        pr_price=self.lineEdit_15.text()
        pr_kgs=self.lineEdit_16.text()
        pr_qty=self.lineEdit_17.text()
        try:
             if self.lineEdit_12.text()=='' or self.lineEdit_13.text()=='' or self.lineEdit_14.text()=='' or self.lineEdit_15.text()=='' or self.lineEdit_16.text()=='' or self.lineEdit_16.text()=='':
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("SOME FIELD MISSING")
                msg.setWindowTitle("BMS")
                msg.exec_()
             else:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''INSERT INTO PRODUCTS(CAT_NAME,PR_ID,PR_NAME,DESC,PRICE,KGS,QTY) VALUES(?,?,?,?,?,?,?);''')
                cursor.execute(sql,(com,pr_id,pr_name,pr_desc,pr_price,pr_kgs,pr_qty))
                conn.commit()
                conn.close()
                self.lineEdit_12.setText("")
                self.lineEdit_13.setText("")
                self.lineEdit_14.setText("")                
                self.lineEdit_15.setText("")
                self.lineEdit_16.setText("")
                self.lineEdit_17.setText("")
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("SUCCESSFULLY ADDED")
                msg.setWindowTitle("BMS")
                msg.exec_()
        except Exception as error:
             print(error)

    def delpr(self):
        pr_id=self.lineEdit_12.text()
        
        try:
             if pr_id != '':
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''DELETE FROM PRODUCTS WHERE PR_ID = ?''')
                cursor.execute(sql,(pr_id,))
                conn.commit()
                conn.close()
                self.lineEdit_12.setText("")
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("SUCCESSFULLY DELETED")
                msg.setWindowTitle("BMS")
                msg.exec_()
             else:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("ENTER PR-ID")
                msg.setWindowTitle("BMS")
                msg.exec_()
        except Exception as error:
             msg = QMessageBox()
             msg.setIcon(QMessageBox.Information)
             msg.setText("PR-ID EMPTY !!")
             msg.setWindowTitle("BMS")
             msg.exec_()
    def taketable(self):
        pid=self.lineEdit_18.text()
        try:
             if pid!='':
                a=[]
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT * FROM PRODUCTS WHERE PR_ID = ?''')
                cursor.execute(sql,(pid,))
                b=cursor.fetchone()
                for b in b:
                        a.append(b)
                self.lineEdit_31.setText(a[2])
                self.lineEdit_32.setText(a[4])
                self.lineEdit_33.setFocus()
                conn.commit()
                conn.close()
             else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("NO SUCH PR-ID")
                msg.setWindowTitle("BMS")
                msg.exec_()
        except Exception as error:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("NO SUCH PR-ID")
                msg.setWindowTitle("BMS")
                msg.exec_()             
    def loaddata(self):
        try:
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("SELECT * FROM DATA")
             result=cursor.execute(sql)
             self.tableWidget.setRowCount(0)
             for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget.setItem(row_number,column_number, QtWidgets.QTableWidgetItem(str(data)))
             conn.commit()
             conn.close()
        except Exception as error:
             print(error)   
    def addmore(self):
        Pr_Id=self.lineEdit_18.text()
        Pr_Name=self.lineEdit_31.text()
        Unit_Cost=self.lineEdit_32.text()
        Quantity=self.lineEdit_33.text()
        salesno=self.lineEdit_11.text()
        try:
            if Pr_Id and Pr_Name and Unit_Cost and Quantity != "":
                global B
                global p
                global d
                d=d+6
                A=int(Unit_Cost)*int(Quantity)
                B=B+A
                A=str(A)
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''INSERT INTO DATA(PR_ID,PR_NAME,PRICE,QUANTITY,TOTAL) VALUES(?,?,?,?,?);''')
                cursor.execute(sql,(Pr_Id,Pr_Name,Unit_Cost,Quantity,A))
                conn.commit()
                conn.close()
                conn=sqlite3.connect("BMS.db")
                cursor=conn.cursor()
                sql=('''UPDATE PRODUCTS SET QTY = QTY - ? WHERE PR_ID = ?''')
                cursor.execute(sql,(Quantity,Pr_Id))
                conn.commit()
                conn.close()
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''INSERT INTO SALESPR(SALESNO,PR_ID,PR_NAME,PRICE,QTY,TOTAL) VALUES(?,?,?,?,?,?);''')
                cursor.execute(sql,(salesno,Pr_Id,Pr_Name,Unit_Cost,Quantity,A))
                conn.commit()
                conn.close()
                p.drawString(25,d,Pr_Id)
                p.drawString(75,d,Pr_Name)
                p.drawString(125,d,Unit_Cost)
                p.drawString(148,d,Quantity)
                p.drawString(173,d,A)
                self.lineEdit_34.setText(str(B))
                self.lineEdit_18.setText("")
                self.lineEdit_31.setText("")
                self.lineEdit_32.setText("")
                self.lineEdit_33.setText("")
                self.lineEdit_18.setFocus()
        except Exception as error:
             print("addmore",error)
    def sales(self):
        da=self.dateEdit_7.text()
        sale=self.lineEdit_34.text()
        bno=self.lineEdit_11.text()
        try:
                global p
                pr=round(int(sale)*12/100)
                pr=str(pr)
                p.drawString(173,217,sale)
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''INSERT INTO SALES(SALESNO,DATE,TOTAL,PROFIT) VALUES(?,?,?,?);''')
                cursor.execute(sql,(bno,da,sale,pr))
                conn.commit()
                conn.close()
                global d
                d=94
                p.showPage
                p.save()
                global B
                B=0
                webbrowser.open("BMS.pdf")
        except Exception as error:
                print(error)
    def prreportgenerate(self):
        fd=self.dateEdit.text()
        sd=self.dateEdit_2.text()
        fds=fd.replace("-"," ")
        sds=sd.replace("-"," ")
        fdss = datetime.strptime(fds, '%d %b %Y')
        sdss = datetime.strptime(sds, '%d %b %Y')
        try:
            if fdss <= sdss: 
                c = canvas.Canvas("BMSREPORTS-PROFIT.pdf",pagesize=(200,250),bottomup=0)
                c.translate(10,40)
                c.scale(1,-1)
                c.drawImage("logopng-01.png",0,0,width=50,height=30)
                c.scale(1,-1)
                c.translate(-10,-40)
                c.setFont("Helvetica-Bold",10)
                c.drawCentredString(125,20,"BMS")
                c.line(70,22,180,22)
                c.setFont("Helvetica-Bold",5)
                c.drawCentredString(125,30,"BMS PROFIT REPORTS")
                c.line(5,45,195,45)
                c.setFont("Courier-Bold",8)
                c.setFont("Times-Bold",5)
                c.drawRightString(70,50,"FROM DATE :")
                c.drawRightString(70,60,"TO   DATE :")
                c.drawString(90,50,fd)
                c.drawString(90,60,sd)
                c.line(15,80,185,80)
                c.drawString(40,85,"DATE")
                c.drawString(110,85,"TOTAL")
                c.drawString(150,85,"PROFIT")
                c.line(15,92,185,92)
                c.line(15,230,185,230)
                c.line(100,230,100,238)
                c.drawRightString(180,235,"Authorised Signatory")
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT DATE,TOTAL,PROFIT FROM SALES''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                bb=len(b)
                a=[]
                j=[]
                l=[]
                s=0
                y=90
                for b in b:
                        fd=fd.replace("-"," ")
                        sd=sd.replace("-"," ")
                        ex=b[0].replace("-"," ")
                        fdd = datetime.strptime(fd, '%d %b %Y')
                        sdd = datetime.strptime(sd, '%d %b %Y')
                        exd = datetime.strptime(ex, '%d %b %Y')
                        if fdd <= exd and sdd >= exd:
                                a.append(b)    
                                y=y+7
                                c.drawString(40,y,a[s][0])
                                c.drawString(110,y,a[s][1])
                                c.drawString(150,y,a[s][2])
                                s=s+1
                for i in range(len(a)):
                        m=int(a[i][1])
                        n=int(a[i][2])
                        j.append(m)
                        l.append(n)
                k=sum(j)
                z=sum(l)
                # z=z//len(l)
                c.drawString(20,236,"TOTAL")
                c.drawString(45,236,"TOTAL PROFIT")
                c.drawString(20,241,str(k))
                c.drawString(50,241,str(z))
                conn.commit()
                conn.close()
                c.showPage()
                c.save()
                webbrowser.open("BMSREPORTS-PROFIT.pdf")
            else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setWindowTitle("BMS")
                msg.setText("DATE ERROR")
                msg.exec_()
        except Exception as error:
            print(error)
    def reportgenerate(self):
        fd=self.dateEdit.text()
        sd=self.dateEdit_2.text()
        fds=fd.replace("-"," ")
        sds=sd.replace("-"," ")
        fdss = datetime.strptime(fds, '%d %b %Y')
        sdss = datetime.strptime(sds, '%d %b %Y')
        try:
            if fdss <= sdss: 
                c = canvas.Canvas("BMSREPORTS.pdf",pagesize=(200,250),bottomup=0)
                c.translate(10,40)
                c.scale(1,-1)
                c.drawImage("logopng-01.png",0,0,width=50,height=30)
                c.scale(1,-1)
                c.translate(-10,-40)
                c.setFont("Helvetica-Bold",10)
                c.drawCentredString(125,20,"BMS")
                c.line(70,22,180,22)
                c.setFont("Helvetica-Bold",5)
                c.drawCentredString(125,30,"BMS SALES REPORTS")
                c.line(5,45,195,45)
                c.setFont("Courier-Bold",8)
                c.setFont("Times-Bold",5)
                c.drawRightString(70,50,"FROM DATE :")
                c.drawRightString(70,60,"TO   DATE :")
                c.drawString(90,50,fd)
                c.drawString(90,60,sd)
                c.line(15,80,185,80)
                c.drawString(40,85,"DATE")
                c.drawString(110,85,"TOTAL")
                c.line(15,92,185,92)
                c.line(15,230,185,230)
                c.line(100,230,100,238)
                c.drawRightString(180,235,"Authorised Signatory")
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT DATE,TOTAL FROM SALES''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                bb=len(b)
                a=[]
                j=[]
                l=[]
                s=0
                y=90
                for b in b:
                        fd=fd.replace("-"," ")
                        sd=sd.replace("-"," ")
                        ex=b[0].replace("-"," ")
                        fdd = datetime.strptime(fd, '%d %b %Y')
                        sdd = datetime.strptime(sd, '%d %b %Y')
                        exd = datetime.strptime(ex, '%d %b %Y')
                        if fdd <= exd and sdd >= exd:
                                a.append(b)  
                                y=y+7
                                c.drawString(40,y,a[s][0])
                                c.drawString(110,y,a[s][1])
                                s=s+1
                for i in range(len(a)):
                        m=int(a[i][1])
                        j.append(m)
                k=sum(j)
                c.drawString(20,236,"TOTAL")
                c.drawString(20,241,str(k))
                conn.commit()
                conn.close()
                c.showPage()
                c.save()
                webbrowser.open("BMSREPORTS.pdf")
            else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setWindowTitle("BMS")
                msg.setText("DATE ERROR")
                msg.exec_()
        except Exception as error:
            print(error)
    def pgetpid(self):
        try:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT PR_ID FROM PRODUCTS''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                data=[datum[0] for datum in b]
                # print(data)
                conn.commit()
                conn.close()
                completer=QCompleter(data)
                self.lineEdit_18.setCompleter(completer)
        except Exception as error:
                print(error)
    def prgetpid(self):
        try:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT PR_ID FROM PRODUCTS''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                data=[datum[0] for datum in b]
                # print(data)
                conn.commit()
                conn.close()
                completer=QCompleter(data)
                self.lineEdit_12.setCompleter(completer)
        except Exception as error:
                print(error)
    def pdfpos(self):
        global p
        try:
                p = canvas.Canvas("BMS.pdf",pagesize=(200,250),bottomup=0)
                p.translate(10,40)
                p.scale(1,-1)
                p.drawImage("logopng-01.png",0,0,width=50,height=30)
                p.scale(1,-1)
                p.translate(-10,-40)
                p.setFont("Helvetica-Bold",10)
                p.drawCentredString(125,20,"BMS")
                p.line(70,22,180,22)
                p.setFont("Helvetica-Bold",5)
                p.drawCentredString(125,30,"SALES ORDER")
                p.drawCentredString(125,35,"RWP-PAKISTAN")
                p.line(5,45,195,45)
                p.setFont("Courier-Bold",8)
                p.setFont("Times-Bold",5)
                p.drawRightString(70,50,"INVOICE No. :")
                no=self.lineEdit_11.text()
                p.drawString(90,50,no)
                p.drawRightString(70,60,"DATE :")
                e=self.dateEdit_7.text()
                p.drawString(90,60,e)
                p.line(15,80,185,80)
                p.line(15,92,185,92)
                p.drawCentredString(25,89,"PR-ID.")
                p.drawCentredString(75,89,"PR-NAME")
                p.drawCentredString(125,89,"RATE")
                p.drawCentredString(148,89,"QTY")
                p.drawCentredString(173,89,"TOTAL")
                p.drawCentredString(25,217,"TOTAL")
                p.line(15,220,185,220)
                p.line(100,220,100,238)
                p.drawRightString(180,235,"Authorised Signatory")
        except Exception as error:
            print("pdf making",error)
    def updatepr(self):
        pid=self.lineEdit_12.text()
        price=self.lineEdit_15.text()
        qty=self.lineEdit_17.text()
        try:
             if pid and price and qty != "":
                conn=sqlite3.connect("BMS.db")
                cursor=conn.cursor()
                sql=('UPDATE PRODUCTS SET PRICE = ?, QTY = QTY + ? WHERE PR_ID = ?')
                cursor.execute(sql,(price,int(qty),pid))
                conn.commit()
                conn.close()
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setWindowTitle("BMS")
                msg.setText("PRICE AND QUANTITY UPDATED")
                msg.exec_()
             else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setWindowTitle("BMS")
                msg.setText("ENTER PRICE QUANTITY AND PR-ID FOR UPDATION !")
                msg.exec_()
        except Exception as error:
             print(error)
###  PURCHASE  ORDER WORKS ####
    def takepurtable(self):
        pid=self.lineEdit_19.text()
        try:
             if pid !='':
                a=[]
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT * FROM PRODUCTS WHERE PR_ID = ?''')
                cursor.execute(sql,(pid,))
                b=cursor.fetchone()
                for b in b:
                        a.append(b)
                self.lineEdit_35.setText(a[2])
                self.lineEdit_36.setText(a[4])
                self.lineEdit_37.setFocus()
                conn.commit()
                conn.close()
             else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("NO SUCH PR-ID")
                msg.setWindowTitle("BMS")
                msg.exec_()
        except Exception as error:
                print(error)
    def purpid(self):
        try:
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''SELECT PR_ID FROM PRODUCTS''')
                cursor.execute(sql,)
                b=cursor.fetchall()
                data=[datum[0] for datum in b]
                # print(data)
                conn.commit()
                conn.close()
                completer=QCompleter(data)
                self.lineEdit_19.setCompleter(completer)
        except Exception as error:
                print(error)
    def addmorepur(self):
        global r
        Pr_Id=self.lineEdit_19.text()
        Pr_Name=self.lineEdit_35.text()
        Unit_Cost=self.lineEdit_36.text()
        Quantity=self.lineEdit_37.text()
        try:
            if Pr_Id and Pr_Name and Unit_Cost and Quantity != "":
                q=int(Unit_Cost)*int(Quantity)
                r=r+q
                q=str(q)
                conn = sqlite3.connect('BMS.db')
                cursor = conn.cursor()
                sql = ('''INSERT INTO DATAPUR(PR_ID,PR_NAME,PRICE,QUANTITY,TOTAL) VALUES(?,?,?,?,?);''')
                cursor.execute(sql,(Pr_Id,Pr_Name,Unit_Cost,Quantity,q))
                conn.commit()
                conn.close()
                conn=sqlite3.connect("BMS.db")
                cursor=conn.cursor()
                sql=('''UPDATE PRODUCTS SET PR_NAME = ?, PRICE = ? , QTY = QTY + ? WHERE PR_ID = ?''')
                cursor.execute(sql,(Pr_Name,Unit_Cost,Quantity,Pr_Id))
                conn.commit()
                conn.close()
                self.lineEdit_38.setText(str(r))
                self.lineEdit_37.setText("")
                self.lineEdit_36.setText("")
                self.lineEdit_35.setText("")
                self.lineEdit_19.setText("")
            else:
                msg=QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setWindowTitle("BMS")
                msg.setText("WRONG PR-ID")
                msg.exec_()
        except Exception as error:
             print(error)
    def loadpurdata(self):
        try:
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("SELECT * FROM DATAPUR")
             result=cursor.execute(sql)
             self.tableWidget_2.setRowCount(0)
             for row_number, row_data in enumerate(result):
                self.tableWidget_2.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget_2.setItem(row_number,column_number, QtWidgets.QTableWidgetItem(str(data)))
             conn.commit()
             conn.close()
        except Exception as error:
             print(error) 
    def savepur(self):
        try:
             global r
             r=0
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("DELETE FROM DATAPUR")
             result=cursor.execute(sql)
             conn.commit()
             conn.close()
             conn = sqlite3.connect('BMS.db')
             cursor = conn.cursor()
             sql=("SELECT * FROM DATAPUR")
             result=cursor.execute(sql)
             self.tableWidget_2.setRowCount(0)
             for row_number, row_data in enumerate(result):
                self.tableWidget_2.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                        self.tableWidget_2.setItem(row_number,column_number, QtWidgets.QTableWidgetItem(str(data)))
             conn.commit()
             conn.close()
             self.lineEdit_19.setText("")
             self.lineEdit_35.setText("")
             self.lineEdit_36.setText("")        
             self.lineEdit_37.setText("")
        except Exception as error:
             print(error) 
















import bms_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BMS = QtWidgets.QMainWindow()
    ui = Ui_BMS()
    ui.setupUi(BMS)
    BMS.show()
    sys.exit(app.exec_())